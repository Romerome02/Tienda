-- MySQL Script generated by MySQL Workbench
-- Sun Mar  2 15:04:33 2025
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema tienda
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `tienda` ;

-- -----------------------------------------------------
-- Schema tienda
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `tienda` DEFAULT CHARACTER SET utf8mb4 ;
SHOW WARNINGS;
USE `tienda` ;

-- -----------------------------------------------------
-- Table `tienda`.`categorias`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `tienda`.`categorias` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `tienda`.`categorias` (
  `id` INT(11) NOT NULL AUTO_INCREMENT,
  `nombre` VARCHAR(255) NOT NULL,
  `fecha_creacion` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP(),
  `fecha_actualizacion` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP() ON UPDATE CURRENT_TIMESTAMP(),
  PRIMARY KEY (`id`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `tienda`.`productos`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `tienda`.`productos` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `tienda`.`productos` (
  `id` VARCHAR(20) NOT NULL,
  `nombre` VARCHAR(255) NOT NULL,
  `descripcion` TEXT NULL DEFAULT NULL,
  `precio` DECIMAL(10,2) NOT NULL,
  `imagen` VARCHAR(255) NULL DEFAULT NULL,
  `estado` VARCHAR(45) NULL DEFAULT NULL,
  `fecha_creacion` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP(),
  `fecha_actualizacion` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP() ON UPDATE CURRENT_TIMESTAMP(),
  `categorias_id1` INT(11) NOT NULL,
  PRIMARY KEY (`id`),
  CONSTRAINT `fk_productos_categorias`
    FOREIGN KEY (`categorias_id1`)
    REFERENCES `tienda`.`categorias` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4;

SHOW WARNINGS;
CREATE INDEX `fk_productos_categorias_idx1` ON `tienda`.`productos` (`categorias_id1` ASC) ;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `tienda`.`usuarios`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `tienda`.`usuarios` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `tienda`.`usuarios` (
  `id` INT(11) NOT NULL AUTO_INCREMENT,
  `nombre` VARCHAR(255) NOT NULL,
  `email` VARCHAR(255) NOT NULL,
  `contrasena` VARCHAR(255) NOT NULL,
  `rol` ENUM('admin', 'cliente') NOT NULL,
  `fecha_creacion` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP(),
  PRIMARY KEY (`id`))
ENGINE = InnoDB
AUTO_INCREMENT = 11
DEFAULT CHARACTER SET = utf8mb4;

SHOW WARNINGS;
CREATE UNIQUE INDEX `email` ON `tienda`.`usuarios` (`email` ASC) ;

SHOW WARNINGS;

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
USE `tienda`;

DELIMITER $$

USE `tienda`$$
DROP TRIGGER IF EXISTS `tienda`.`productos_BEFORE_INSERT` $$
SHOW WARNINGS$$
USE `tienda`$$
CREATE DEFINER = CURRENT_USER TRIGGER `tienda`.`productos_BEFORE_INSERT` BEFORE INSERT ON `productos` FOR EACH ROW
BEGIN

END
$$

SHOW WARNINGS$$

USE `tienda`$$
DROP TRIGGER IF EXISTS `tienda`.`productos_AFTER_INSERT` $$
SHOW WARNINGS$$
USE `tienda`$$
CREATE DEFINER = CURRENT_USER TRIGGER `tienda`.`productos_AFTER_INSERT` AFTER INSERT ON `productos` FOR EACH ROW
BEGIN

END
$$

SHOW WARNINGS$$

USE `tienda`$$
DROP TRIGGER IF EXISTS `tienda`.`productos_BEFORE_UPDATE` $$
SHOW WARNINGS$$
USE `tienda`$$
CREATE DEFINER = CURRENT_USER TRIGGER `tienda`.`productos_BEFORE_UPDATE` BEFORE UPDATE ON `productos` FOR EACH ROW
BEGIN

END
$$

SHOW WARNINGS$$

USE `tienda`$$
DROP TRIGGER IF EXISTS `tienda`.`productos_AFTER_UPDATE` $$
SHOW WARNINGS$$
USE `tienda`$$
CREATE DEFINER = CURRENT_USER TRIGGER `tienda`.`productos_AFTER_UPDATE` AFTER UPDATE ON `productos` FOR EACH ROW
BEGIN

END
$$

SHOW WARNINGS$$

USE `tienda`$$
DROP TRIGGER IF EXISTS `tienda`.`productos_BEFORE_DELETE` $$
SHOW WARNINGS$$
USE `tienda`$$
CREATE DEFINER = CURRENT_USER TRIGGER `tienda`.`productos_BEFORE_DELETE` BEFORE DELETE ON `productos` FOR EACH ROW
BEGIN

END
$$

SHOW WARNINGS$$

USE `tienda`$$
DROP TRIGGER IF EXISTS `tienda`.`productos_AFTER_DELETE` $$
SHOW WARNINGS$$
USE `tienda`$$
CREATE DEFINER = CURRENT_USER TRIGGER `tienda`.`productos_AFTER_DELETE` AFTER DELETE ON `productos` FOR EACH ROW
BEGIN

END
$$

SHOW WARNINGS$$

DELIMITER ;
